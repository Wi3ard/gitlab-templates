###############################################################################
# Gitlab CI templates for building Docker images.
#

#
# Build a Docker image.
#
# The following variables are required:
#
# DOCKER_IMAGE: The name of the Docker image to build.
# DOCKER_IMAGE_TAG: The tag of the Docker image to build.
#
# The following variables are optional:
#
# DOCKER_BUILD_CONTEXT: The path to the Docker build context.
# DOCKERFILE_PATH: Path to the Dockerfile.
# PROJECT_DIR: The path to the project directory.
# TARGET: The name of the Dockerfile target to build.
#

.docker_build:
  after_script:
    - cd -
  before_script:
    - cd ${PROJECT_DIR}
  script:
    - echo ${DOCKER_IMAGE}
    - docker pull ${DOCKER_IMAGE} || true
    - docker build --cache-from ${DOCKER_IMAGE}:latest -t
      ${DOCKER_IMAGE}:${DOCKER_IMAGE_TAG} -t ${DOCKER_IMAGE}:latest
      ${TARGET:+--target $TARGET} -f ${DOCKERFILE_PATH} ${DOCKER_BUILD_CONTEXT}
    - docker push ${DOCKER_IMAGE}:${DOCKER_IMAGE_TAG}
    - docker push ${DOCKER_IMAGE}:latest
  variables:
    DOCKER_BUILD_CONTEXT: .
    DOCKER_IMAGE: CHANGE_ME
    DOCKER_IMAGE_TAG: CHANGE_ME
    DOCKERFILE_PATH: Dockerfile
    PROJECT_DIR: .

###############################################################################
# AWS Elastic Container Registry support.
#
# This section is used to build and push Docker images to AWS Elastic Container
# Registry.
#

#
# Build a Docker image and push it to AWS Elastic Container Registry.
#
# The following variables are required:
#
# - AWS_ACCESS_KEY_ID - AWS access key ID.
# - AWS_REGION - AWS region.
# - AWS_SECRET_ACCESS_KEY - AWS secret access key.
# - ECR_REPOSITORY_URI - AWS Elastic Container Registry repository URI.
#

.docker_ecr_build:
  before_script:
    - !reference [.docker_ecr_login, before_script]
    - !reference [.docker_build, before_script]
  extends:
    - .docker_build
    - .docker_ecr_login
  script:
    - !reference [.docker_ecr_login, script]
    - !reference [.docker_build, script]
  variables:
    DOCKER_IMAGE: ${ECR_REPOSITORY_URI}

#
# Initialize runner image to work with AWS Elastic Container Registry.
#

.docker_ecr_init:
  before_script:
    - amazon-linux-extras install docker
    - aws --version
  image:
    name: amazon/aws-cli
    entrypoint: [""]

#
# Login to AWS Elastic Container Registry.
#

.docker_ecr_login:
  extends: .docker_ecr_init
  script:
    - aws ecr get-login-password | docker login --username AWS --password-stdin
      $ECR_REPOSITORY_URI
  variables:
    AWS_ACCESS_KEY_ID: CHANGE_ME
    AWS_REGION: CHANGE_ME
    AWS_SECRET_ACCESS_KEY: CHANGE_ME
    ECR_REPOSITORY_URI: CHANGE_ME

###############################################################################
# GitLab Container Registry support.
#
# This section is used to build and push Docker images to GitLab Container
# Registry.
#

#
# Initialize runner image to work with the support for GitLab Container
# Registry.
#

.docker_gitlab_init:
  image:
    name: docker:latest
    entrypoint: [""]
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay

#
# Login to GitLab Container Registry.
#

.docker_gitlab_login:
  extends: .docker_gitlab_init
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD

#
# Build a Docker image and push it to GitLab Container Registry.
#

.docker_gitlab_build:
  before_script:
    - !reference [.docker_build, before_script]
  extends:
    - .docker_build
    - .docker_gitlab_login
  script:
    - !reference [.docker_gitlab_login, script]
    - !reference [.docker_build, script]
  variables:
    DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}
